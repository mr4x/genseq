{
  "version": 3,
  "sources": ["../node_modules/frappe-charts/dist/frappe-charts.esm.js", "../src/data.js", "../src/utils.js", "../src/index.js"],
  "sourcesContent": ["function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\n\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nfunction getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nfunction isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nfunction isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nfunction getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\n\n\n\n\nfunction fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\n\nconst BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nfunction getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nfunction getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nfunction getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nfunction getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nconst INIT_CHART_UPDATE_TIMEOUT = 700;\nconst CHART_POST_ANIMATE_TIMEOUT = 400;\n\nconst DEFAULT_AXIS_CHART_TYPE = 'line';\nconst AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nconst AXIS_LEGEND_BAR_SIZE = 100;\n\nconst BAR_CHART_SPACE_RATIO = 0.5;\nconst MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nconst LINE_CHART_DOT_SIZE = 4;\nconst DOT_OVERLAY_SIZE_INCR = 4;\n\nconst PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nconst PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nconst HEATMAP_DISTRIBUTION_SIZE = 5;\n\nconst HEATMAP_SQUARE_SIZE = 10;\nconst HEATMAP_GUTTER_SIZE = 2;\n\nconst DEFAULT_CHAR_WIDTH = 7;\n\nconst TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\n\nconst DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nclass SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nfunction floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\n\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\n\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nfunction fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nfunction getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\n\n\n// https://stackoverflow.com/a/29325222\n\n\nfunction getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nfunction isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nfunction round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }\n\nfunction getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nfunction equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nfunction truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nfunction shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by Fran\u00E7ois Romain)\nfunction getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n\nconst PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nfunction lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nfunction isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nconst getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nconst FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $$1(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$$1(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $$1(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nfunction makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nfunction makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nfunction makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\n\n\nfunction makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nfunction makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nfunction percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nfunction xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nfunction yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nfunction yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nfunction datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nlet makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nlet updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n\nconst UNIT_ANIM_DUR = 350;\nconst PATH_ANIM_DUR = 350;\nconst MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nconst REPLACE_ALL_NEW_DUR = 250;\n\nconst STD_EASING = 'easein';\n\nfunction translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nfunction translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nfunction translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nfunction animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nfunction animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nfunction animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n// Leveraging SMIL Animations\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nfunction transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nfunction runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n\nconst CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";\n\nfunction downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nfunction prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n\nclass BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n\nclass AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n\n// Playing around with dates\n\nconst NO_OF_YEAR_MONTHS = 12;\nconst NO_OF_DAYS_IN_WEEK = 7;\n\nconst NO_OF_MILLIS = 1000;\nconst SEC_IN_DAY = 86400;\n\nconst MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n\nconst DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nfunction getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nfunction clone(date) {\n\treturn new Date(date.getTime());\n}\n\n\n\n\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nfunction getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nfunction getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nfunction areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nfunction getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nfunction getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nfunction setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nfunction addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nfunction getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n\nclass PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nfunction calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nfunction getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\n\n\nfunction getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nfunction getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nfunction scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\n\n\n\n\nfunction getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nfunction calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nfunction getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nclass Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec$$1 => {\n\t\t\t\tlet date = new Date(timestampSec$$1 * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec$$1];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n\nfunction dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nfunction zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nfunction getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n\nclass AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n\nclass DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };\n", "export const V = [\n    { a: 3, b: 11, A: 1, u: 0, o: 1 },\n    { a: 1, b: 11, A: 1, u: 0, o: 6 },\n    { a: 3, b: 9, A: 1, u: 1, o: 2 },\n];\n", "export const $ = (selector, scope = document) => scope.querySelector(selector);\n\nexport const $on = (target, type, callback, capture) => target.addEventListener(type, callback, !!capture);\n\nexport const ce = tag => document.createElement(tag);\n\nexport const createRow = (title, arr) => {\n    const $tr = ce('tr');\n\n    const $th = ce('th');\n    $th.textContent = title;\n    $tr.appendChild($th);\n\n    for (const v of arr) {\n        const $td = ce('td');\n        $td.textContent = typeof v === 'number' ? round(v) : v;\n        $tr.appendChild($td);\n    }\n    return $tr;\n};\n\nexport const updateTable = (id, data) => {\n    const $tbody = $(id);\n    $tbody.innerHTML = '';\n\n    for (const r of data) {\n        const $tr = createRow(r.title, r.values);\n        $tbody.appendChild($tr);\n    }\n};\n\nexport const round = (x, n = 4) => x.toFixed(n);\n\nexport const min = arr => Math.min(...arr);\n\nexport const max = arr => Math.max(...arr);\n\nexport const rand = Math.random;\n\nexport const computeStats = arr => {\n    const n = arr.length;\n\n    const min = Math.min(...arr);\n    const max = Math.max(...arr);\n\n    const sum = arr.reduce((sum, x) => sum + x, 0);\n    const mx = sum / n;\n\n    const sum2 = arr.reduce((sum, x) => sum + Math.pow(x - mx, 2), 0);\n    const dx = sum2 / (n - 1);\n\n    return { mx, dx, min, max };\n};\n\nexport const countSeq = arr => {\n    const k = Math.ceil(1 + 3.222 * Math.log10(arr.length));\n    const aMin = min(arr),\n        aMax = max(arr);\n    const diff = (aMax - aMin) / k;\n\n    const intervals = [];\n    for (let i = 0; i < k; i++) {\n        intervals.push({ from: aMin + diff * i, to: aMin + diff * (i + 1), n: 0 });\n    }\n\n    for (const v of arr) {\n        for (const span of intervals) {\n            if (span.from <= v && v < span.to) {\n                span.n++;\n            }\n        }\n    }\n\n    return intervals;\n};\n\nexport const generateSeq = (n, fn) =>\n    Array.from({ length: n }, fn)\n        .flat()\n        .slice(0, n)\n        .sort((a, b) => a - b);\n\nexport const bellDist = (u, o) => {\n    while (true) {\n        const v1 = 2 * rand() - 1,\n            v2 = 2 * rand() - 1;\n\n        const s = v1 * v1 + v2 * v2;\n        if (s <= 1) {\n            const sq = Math.sqrt((-2 * Math.log(s)) / s);\n            const r1 = v1 * sq;\n            const r2 = v2 * sq;\n            return [u + o * r1, u + o * r2];\n        }\n    }\n};\n\nexport const uniformDist = (min, max) => rand() * (max - min) + min;\n\nexport const uniformStats = (min, max) => ({ mx: (max + min) / 2, dx: Math.pow(max - min, 2) / 12 });\n\nexport const exponentialDist = (A = 1) => -Math.log(rand()) / A;\n\nexport const exponentialStats = (A = 1) => ({ mx: Math.pow(A, -1), dx: Math.pow(A, -2) });\n\nexport const normalDist = (u, o) => {\n    let s = 0;\n    for (let i = 0; i < 12; i++) {\n        s += rand();\n    }\n    return u + o * (s - 6);\n};\n\nexport const normalStats = (u, o) => ({ mx: u, dx: o * o });\n\nconst SQRT_2PI = Math.sqrt(2 * Math.PI);\nconst round4 = x => Math.round(x * 1e4) / 1e4;\n\nfunction cumulativeDistribution(z) {\n    let sum = z,\n        tmp = z;\n\n    // 15 iterations are enough for 4-digit precision\n    for (let i = 1; i < 15; i++) {\n        tmp *= (z * z) / (2 * i + 1);\n        sum += tmp;\n    }\n    return round4(0.5 + (sum / SQRT_2PI) * Math.exp((-z * z) / 2));\n}\n\nexport const ksTest = (arr, u, o, a) => {\n    const n = arr.length;\n    const sq = Math.sqrt((n * n) / (n + n));\n\n    const max = Math.max(\n        ...arr.map((x, i) => {\n            const F = (i + 1) / n;\n            const Fn = cumulativeDistribution(round4((x - u) / o));\n            return Math.abs(F - Fn);\n        })\n    );\n\n    return {\n        ka: Math.sqrt(-Math.log((1 - a) / 2) / 2),\n        value: sq * max,\n    };\n};\n", "import { Chart } from 'frappe-charts/dist/frappe-charts.esm';\n\nimport { V } from './data';\nimport {\n    uniformDist,\n    normalDist,\n    exponentialDist,\n    generateSeq,\n    $on,\n    $,\n    min,\n    max,\n    round,\n    countSeq,\n    computeStats,\n    updateTable,\n    uniformStats,\n    normalStats,\n    exponentialStats,\n    bellDist,\n    ksTest,\n} from './utils';\n\nfunction createChart(id, title, seqLen, fn) {\n    const seq = generateSeq(seqLen, fn);\n    const count = countSeq(seq);\n\n    return {\n        seq,\n        count,\n        chart: new Chart(id, {\n            title,\n            type: 'bar',\n            height: 300,\n            data: {\n                labels: count.map((_, i) => i + 1),\n                datasets: [{ name: 'x', type: 'bar', values: count.map(x => x.n) }],\n            },\n            tooltipOptions: {\n                formatTooltipX: x => {\n                    const span = count[x - 1];\n                    return `\u043E\u0442 ${round(span.from, 4)} \u0434\u043E ${round(span.to, 4)}`;\n                },\n            },\n        }),\n    };\n}\n\nfunction createStats(tableId, chartId, fn, stats) {\n    const x10 = generateSeq(10, fn);\n    const s10 = computeStats(x10);\n\n    const x20 = generateSeq(20, fn);\n    const s20 = computeStats(x20);\n\n    const x50 = generateSeq(50, fn);\n    const s50 = computeStats(x50);\n\n    const x100 = generateSeq(100, fn);\n    const s100 = computeStats(x100);\n\n    const x1000 = generateSeq(1000, fn);\n    const s1000 = computeStats(x1000);\n\n    const mxSeq = [s10.mx, s20.mx, s50.mx, s100.mx, s1000.mx];\n    const dxSeq = [s10.dx, s20.dx, s50.dx, s100.dx, s1000.dx];\n\n    updateTable(tableId, [\n        { title: '\u041C\u0438\u043D\u0438\u043C\u0443\u043C', values: [s10.min, s20.min, s50.min, s100.min, s1000.min] },\n        { title: '\u041C\u0430\u043A\u0441\u0438\u043C\u0443\u043C', values: [s10.max, s20.max, s50.max, s100.max, s1000.max] },\n        { title: 'M(X)', values: mxSeq },\n        { title: 'M(X) \u0442\u0435\u043E\u0440', values: generateSeq(5, () => stats.mx) },\n        { title: 'M(X) \u0440\u0430\u0437\u043D %', values: mxSeq.map(x => Math.abs(stats.mx - x) / x) },\n        { title: 'D(X)', values: dxSeq },\n        { title: 'D(X) \u0442\u0435\u043E\u0440', values: generateSeq(5, () => stats.dx) },\n        { title: 'D(X) \u0440\u0430\u0437\u043D %', values: dxSeq.map(x => Math.abs(stats.dx - x) / x) },\n    ]);\n\n    new Chart(chartId, {\n        title: '\u0417\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0441\u0442\u044C M(X) \u0438 D(X) \u043E\u0442 \u0440\u0430\u0437\u043C\u0435\u0440\u0430 \u0432\u044B\u0431\u043E\u0440\u043A\u0438',\n        type: 'line',\n        height: 300,\n        axisOptions: {\n            yAxisMode: 'tick',\n        },\n        data: {\n            labels: [10, 20, 50, 100, 1000],\n            datasets: [\n                { name: 'M(X)', type: 'line', values: mxSeq },\n                { name: 'D(X)', type: 'line', values: dxSeq },\n            ],\n            yMarkers: [\n                {\n                    label: 'M(X)',\n                    value: stats.mx,\n                    options: { labelPos: 'left' },\n                },\n                {\n                    label: 'D(X)',\n                    value: stats.dx,\n                },\n            ],\n        },\n    });\n}\n\nfunction computeVariant(vIndex) {\n    const data = V[vIndex];\n    $('#a').textContent = data.a;\n    $('#b').textContent = data.b;\n    $('#A').textContent = data.A;\n    $('#u').textContent = data.u;\n    $('#o').textContent = data.o;\n\n    const seqLen = 1000;\n\n    const uFn = () => uniformDist(data.a, data.b);\n    const uStats = uniformStats(data.a, data.b);\n    createChart('#u1000', '\u0420\u0430\u0432\u043D\u043E\u043C\u0435\u0440\u043D\u043E\u0435 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435', seqLen, uFn);\n    createStats('#uTable', '#uStats', uFn, uStats);\n\n    const bFn = () => bellDist(data.u, data.o);\n    const bStats = normalStats(data.u, data.o);\n    const bChart = createChart('#b1000', '\u041D\u043E\u0440\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435 (\u0430\u043B\u0433\u043E\u0440\u0438\u0442\u043C \u0411\u0435\u043B\u043B\u0430)', seqLen, bFn);\n    createStats('#bTable', '#bStats', bFn, bStats);\n\n    const b01 = ksTest(bChart.seq, data.u, data.o, 0.1);\n    const b005 = ksTest(bChart.seq, data.u, data.o, 0.05);\n    updateTable('#bTest', [\n        { title: '0.1', values: [b01.ka, b01.value, b01.value < b01.ka] },\n        { title: '0.05', values: [b005.ka, b005.value, b005.value < b005.ka] },\n    ]);\n\n    const nFn = () => normalDist(data.u, data.o);\n    const nStats = normalStats(data.u, data.o);\n    const nChart = createChart('#n1000', '\u041D\u043E\u0440\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435', seqLen, nFn);\n    createStats('#nTable', '#nStats', nFn, nStats);\n\n    const n01 = ksTest(nChart.seq, data.u, data.o, 0.1);\n    const n005 = ksTest(nChart.seq, data.u, data.o, 0.05);\n    updateTable('#nTest', [\n        { title: '0.1', values: [n01.ka, n01.value, n01.value < n01.ka] },\n        { title: '0.05', values: [n005.ka, n005.value, n005.value < n005.ka] },\n    ]);\n\n    const eFn = () => exponentialDist(data.A);\n    const eStats = exponentialStats(data.A);\n    createChart('#e1000', '\u042D\u043A\u0441\u043F\u043E\u043D\u0435\u043D\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0435 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435', seqLen, eFn);\n    createStats('#eTable', '#eStats', eFn, eStats);\n}\ncomputeVariant(0);\n\n$on($('#variant'), 'change', ev => {\n    const $el = ev.target;\n    const $option = $el.options[$el.selectedIndex];\n    computeVariant(+$option.value);\n});\n"],
  "mappings": "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",
  "names": []
}
